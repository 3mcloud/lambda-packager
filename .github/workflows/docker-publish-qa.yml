name: Docker Publish QA
# Publish Images to DockerHub with 2 tags per image:
#  '<image>-qa', '<image>-<git_commit_sha>'
# on every branch push

on:
  push:
    branches:
      - "*"
env:
  IMAGE_NAME: 3mcloud/lambda-packager
  REGISTRY: ghcr.io
  ORG: 3mcloud

jobs:
  build-python:
    strategy:
      matrix:
        version: ['3.8', '3.9', '3.10', '3.11']
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Build and test python ${{ matrix.version }}
      id: build_test
      run: make test VERSION=${{ matrix.version }}

    - name: push
      if: steps.build_test.outcome == 'success'
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: 3mcloud/lambda-packager
        username: ${{ secrets.DOCKERHUBUSER }}
        password: ${{ secrets.DOCKERHUBPASS }}
        tags: "python-${{ matrix.version }}-qa,python-${{ matrix.version }}-${{ github.sha }}"
        context: python/.
        dockerfile: python/${{ matrix.version }}/Dockerfile

    - name: login-to-ghcr
      if: steps.build_test.outcome == 'success'
      run: echo "${{ secrets.PACKAGETOKEN }}" | docker login ghcr.io -u USERNAME --password-stdin

    - name: push-to-ghcr
      run: |
        IMAGE_ID=${REGISTRY}/${IMAGE_NAME}
        docker image tag ${IMAGE_NAME}:python-${{ matrix.version }} ${IMAGE_ID}:qa-python-${{ matrix.version }}
        docker image tag ${IMAGE_NAME}:python-${{ matrix.version }} ${IMAGE_ID}:qa-python-${{ matrix.version }}-${{ github.sha }}
        docker image push --all-tags $IMAGE_ID

  build-node14x:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Build and test node 14.x
      id: build_test
      run: make test VERSION=14.18 RUNTIME=node

    - name: push
      if: steps.build_test.outcome == 'success'
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: 3mcloud/lambda-packager
        username: ${{ secrets.DOCKERHUBUSER }}
        password: ${{ secrets.DOCKERHUBPASS }}
        tags: "node-14.18-qa,node-14.18-${{ github.sha }}"
        context: node/.
        dockerfile: node/14.18/Dockerfile

    - name: login-to-ghcr
      if: steps.build_test.outcome == 'success'
      run: echo "${{ secrets.PACKAGETOKEN }}" | docker login ghcr.io -u USERNAME --password-stdin

    - name: push-to-ghcr
      run: |
        IMAGE_ID=${REGISTRY}/${IMAGE_NAME}
        docker image tag ${IMAGE_NAME}:node-14.18 ${IMAGE_ID}:qa-node-14.18
        docker image tag ${IMAGE_NAME}:node-14.18 ${IMAGE_ID}:node-14.18-${{ github.sha }}
        docker image push --all-tags $IMAGE_ID
